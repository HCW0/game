SelectionRadial and Selection Slider




VR에서 쓸만한 간단한 UI에 대해 다룬다.


SelectionRadial.cs

SelectionSlider.cs 참조할 것.

요는 Fire1 키를 홀드하고 있으면 로딩이 진행되고

로딩바 완료되면 OnSelectionComplete or OnBarFilled event when full.

를 통해 다음 이벤트를 수행하도록



스크립트를 까본 결과


내부에서 VRInput 타입의 변수를 인스펙터로 지정하게 되어 있고


아마도 컨트롤러 등을 지정하면

해당 컨트롤러의 VRInput.OnDown 등에 이벤트를 추가해서

자기자신의 상호작용 메서드가 호출되게 할 샘으로 작성되었다.


예를 들어, 컨트롤러의 홀드키가 눌르면

홀드키에 대응하는 

        private void HandleDown()
        {
            // If the radial is active start filling it.
            if (m_IsSelectionRadialActive)
            {
                m_SelectionFillRoutine = StartCoroutine(FillSelectionRadial());
            }
        }

함수가 호출되도록 이벤트를 등록하고, 중간에 때면 반대역할을 하는 녀석을 추가하고


코루틴이 정상수행종료되면(로딩바가 꽉차면)

적당한 OnSelectionComplete 가 호출되도록

OnSelectionComplete에는 다른 곳에서 지정한 이벤트가 등록되어 있겠지.


이제까지 만든 상호작용 메서드와는 좀 다른 점이



객체가 피 객체에게 다가가서 피 객체의 상호작용 메서드를 불렀다면 이번에는

피 객체 쪽에서 사전에 객체쪽의 이벤트를 참조하여 거기에 상호작용메서드를 등록해놓는 방식을 취한다.

물론 발동 타이밍등을 고려하고, 객체를 구분하는 로직이 있어야 하나 여러 이벤트를 등록할 수 있다는 것이

매우 확장성 높다 할 수 있다.



https://unity3d.com/kr/learn/tutorials/topics/virtual-reality/interaction-vr?playlist=22946


나머지 파트는.... 직접 해봐야댐




